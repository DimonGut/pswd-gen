{"version":3,"sources":["components/RangeSlider/RangeSlider.module.scss","components/ResultField/ResultField.module.scss","components/SettingsBar/SettingsBar.module.scss","components/ColorButton/ColorButton.module.scss","components/GenerationForm/GenerationForm.module.scss","components/Checkbox/Checkbox.module.scss","components/App/App.module.scss","utils/generatePassword.ts","components/ResultField/ResultField.tsx","components/RangeSlider/RangeSlider.tsx","components/Checkbox/Checkbox.tsx","components/SettingsBar/SettingsBar.tsx","components/ColorButton/ColorButton.tsx","components/GenerationForm/GenerationForm.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","randomFunction","upper","String","fromCharCode","Math","floor","random","lower","number","num","Uint32Array","window","crypto","getRandomValues","cryptoNum","symbol","symbols","length","ResultField","props","className","classes","component","result","value","RangeSlider","changed","range_slider","type","min","max","onChange","event","parseInt","target","Checkbox","id","checked","label","disable","defaultChecked","disabled","htmlFor","SettingsBar","params","uppercase","lowercase","numbers","updateParams","title","ColorButton","buttonName","action","generate_btn","onClick","preventDefault","GenerationForm","useState","setResult","setLength","settings","setSettings","generationForm","formHeader","pswd","typeArray","filter","item","Object","values","i","forEach","functionName","keys","slice","split","sort","join","generatePassword","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.257b554a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"RangeSlider_component__1WJgS\",\"length\":\"RangeSlider_length__13ZPt\",\"range_slider\":\"RangeSlider_range_slider__328iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ResultField_component__DL3m0\",\"result\":\"ResultField_result__1ROgE\",\"result_info\":\"ResultField_result_info__eLtf7\",\"btn_copy\":\"ResultField_btn_copy__1Dwti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"SettingsBar_component__9xdAP\",\"title\":\"SettingsBar_title__3aH12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ColorButton_component__3aZEr\",\"generate_btn\":\"ColorButton_generate_btn__1KX-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generationForm\":\"GenerationForm_generationForm__fYjon\",\"formHeader\":\"GenerationForm_formHeader__betaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Checkbox_component__3PP5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__3uVRl\"};","function cryptoNum(): number {\r\n  const num = new Uint32Array(1);\r\n  const cryptoRandom = window.crypto.getRandomValues(num);\r\n  return cryptoRandom[0] / (2 ** 32 - 1);\r\n}\r\n\r\nfunction randomNumber(): string {\r\n  return String.fromCharCode(Math.floor(cryptoNum() * 10) + 48);\r\n}\r\nfunction randomSymbol(): string {\r\n  const symbols = '~!@#$%^&*()_+{}\":?><;.,';\r\n  return symbols[Math.floor(Math.random() * symbols.length)];\r\n}\r\n\r\nfunction randomUpperEnLetter(): string {\r\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n}\r\n\r\nfunction randomLowerEnLetter(): string {\r\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n}\r\n\r\nconst randomFunction = {\r\n  upper: randomUpperEnLetter,\r\n  lower: randomLowerEnLetter,\r\n  number: randomNumber,\r\n  symbol: randomSymbol,\r\n};\r\n\r\nexport function generatePassword(\r\n  length: number,\r\n  upper: boolean,\r\n  lower: boolean,\r\n  number: boolean,\r\n  symbol: boolean,\r\n): string {\r\n  let pswd = '';\r\n  const typeArray = [{ upper }, { lower }, { number }, { symbol }].filter((item) => Object.values(item)[0]);\r\n  // eslint-disable-next-line\r\n  for (let i = 0; i < length; i++) {\r\n    // eslint-disable-next-line @typescript-eslint/no-loop-func\r\n    typeArray.forEach((type) => {\r\n      const functionName = Object.keys(type)[0];\r\n      pswd += randomFunction[functionName]();\r\n    });\r\n  }\r\n  return pswd.slice(0, length).split('').sort(() => Math.random() - 0.4).join('');\r\n}\r\n","import React from 'react';\r\n\r\nimport classes from './ResultField.module.scss';\r\n\r\ntype ResultFieldProps = {\r\n  value: string;\r\n};\r\n\r\nconst ResultField: React.FC<ResultFieldProps> = (props) => (\r\n  <div className={classes.component}>\r\n    <div className={classes.result}>{props.value}</div>\r\n    {/* <div className={classes.result_info}>Info</div> */}\r\n    {/* <div className={classes.btn_copy}>копировать</div> */}\r\n  </div>\r\n);\r\n\r\nexport default ResultField;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\n\r\nimport classes from './RangeSlider.module.scss';\r\n\r\ntype RangeSliderProps = {\r\n  length: number;\r\n  changed: Dispatch<SetStateAction<number>>;\r\n};\r\n\r\nconst RangeSlider: React.FC<RangeSliderProps> = (props) => {\r\n  const { length, changed } = props;\r\n\r\n  const updateLength: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    changed(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classes.component}\r\n      data-min=\"4\"\r\n      data-max=\"32\"\r\n    >\r\n      <div\r\n        className={classes.length}\r\n        data-length={length}\r\n      >\r\n        длина:\r\n      </div>\r\n      <input\r\n        className={classes.range_slider}\r\n        type=\"range\"\r\n        min=\"4\"\r\n        max=\"32\"\r\n        value={length}\r\n        onChange={updateLength}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React from 'react';\r\n\r\nimport classes from './Checkbox.module.scss';\r\n\r\ntype CheckboxProps = {\r\n  id: string;\r\n  checked: boolean;\r\n  label: string;\r\n  onChange: () => void;\r\n  disable: boolean;\r\n};\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = (props) => {\r\n  const {\r\n    id, checked, onChange, label, disable,\r\n  } = props;\r\n  return (\r\n    <div className={classes.component}>\r\n      <input\r\n        id={id}\r\n        type=\"checkbox\"\r\n        defaultChecked={checked}\r\n        onChange={onChange}\r\n        disabled={disable}\r\n      />\r\n      <label\r\n        htmlFor={id}\r\n      >\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\n\r\nimport Checkbox from '../Checkbox';\r\nimport classes from './SettingsBar.module.scss';\r\n\r\nexport type Settings = {\r\n  uppercase: boolean;\r\n  lowercase: boolean;\r\n  numbers: boolean;\r\n  symbols: boolean;\r\n};\r\n\r\ntype SettingsBarProps = {\r\n  params: Settings;\r\n  updateParams: (sttngs: Settings) => void;\r\n};\r\n\r\nconst SettingsBar: React.FC<SettingsBarProps> = (props) => {\r\n  const {\r\n    uppercase, lowercase, numbers, symbols,\r\n  } = props.params;\r\n  const { updateParams } = props;\r\n  return (\r\n    <div className={classes.component}>\r\n      <span className={classes.title}>Настройки</span>\r\n      <Checkbox\r\n        id=\"uppercase\"\r\n        checked={uppercase}\r\n        label=\"Использовать Заглавные\"\r\n        onChange={() => updateParams({ ...props.params, uppercase: !uppercase })}\r\n        disable={!lowercase && !numbers && !symbols}\r\n      />\r\n      <Checkbox\r\n        id=\"lowercase\"\r\n        checked={lowercase}\r\n        label=\"Использовать Прописные\"\r\n        onChange={() => updateParams({ ...props.params, lowercase: !lowercase })}\r\n        disable={!uppercase && !numbers && !symbols}\r\n      />\r\n      <Checkbox\r\n        id=\"numbers\"\r\n        checked={numbers}\r\n        label=\"Использовать Цифры\"\r\n        onChange={() => updateParams({ ...props.params, numbers: !numbers })}\r\n        disable={!uppercase && !lowercase && !symbols}\r\n      />\r\n      <Checkbox\r\n        id=\"symbols\"\r\n        checked={symbols}\r\n        label=\"Использовать Символы\"\r\n        onChange={() => updateParams({ ...props.params, symbols: !symbols })}\r\n        disable={!uppercase && !lowercase && !numbers}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n","import React from 'react';\r\n\r\nimport classes from './ColorButton.module.scss';\r\n\r\ntype ColorButtonProps = {\r\n  buttonName: string;\r\n  action: () => void;\r\n};\r\n\r\nconst ColorButton: React.FC<ColorButtonProps> = (props) => {\r\n  const { buttonName, action } = props;\r\n  const pressButton: React.MouseEventHandler<HTMLButtonElement> = (event) => {\r\n    event.preventDefault();\r\n    action();\r\n  };\r\n  return (\r\n    <div className={classes.component}>\r\n      <button\r\n        className={classes.generate_btn}\r\n        onClick={pressButton}\r\n        type=\"button\"\r\n      >\r\n        {buttonName}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorButton;\r\n","import React, { useState } from 'react';\n\nimport { generatePassword } from '../../utils/generatePassword';\nimport ResultField from '../ResultField';\nimport RangeSlider from '../RangeSlider';\nimport SettingsBar from '../SettingsBar';\nimport ColorButton from '../ColorButton';\nimport classes from './GenerationForm.module.scss';\n\nconst GenerationForm: React.FC = () => {\n  const [result, setResult] = useState('Нажмите кнопку Сгенерировать');\n  const [length, setLength] = useState(16);\n  const [settings, setSettings] = useState({\n    uppercase: true,\n    lowercase: true,\n    numbers: true,\n    symbols: false,\n  });\n\n  const generate = () => {\n    const {\n      uppercase, lowercase, numbers, symbols,\n    } = settings;\n    setResult(generatePassword(length, uppercase, lowercase, numbers, symbols));\n  };\n  return (\n    <form className={classes.generationForm}>\n      <h1 className={classes.formHeader}>Password Generator</h1>\n      <ResultField\n        value={result}\n      />\n      <RangeSlider\n        length={length}\n        changed={setLength}\n      />\n      <SettingsBar\n        params={settings}\n        updateParams={setSettings}\n      />\n      <ColorButton\n        buttonName=\"сгенерировать пароль\"\n        action={generate}\n      />\n    </form>\n  );\n};\n\nexport default GenerationForm;\n","import React from 'react';\r\n\r\nimport GenerationForm from '../GenerationForm';\r\nimport classes from './App.module.scss';\r\n\r\nconst App: React.FC = () => (\r\n  <main className={classes.component}>\r\n    <GenerationForm />\r\n  </main>\r\n);\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}